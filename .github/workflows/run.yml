name: create-deployments
on:
  workflow_dispatch:
    inputs:
      iot_appkit_version:
        description: "@iot-appkit version"
        required: true
        type: string
      update_iot_appkit_version:
        description: "update @iot-appkit version"
        required: true
        type: boolean
  workflow_call:
    inputs:
      iot_appkit_version:
        description: "@iot-appkit version"
        required: true
        type: string
      update_iot_appkit_version:
        description: "update @iot-appkit version"
        required: true
        type: boolean
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
env:
  USE_NODE_VERSION: "18.17.1"
  USE_REPOSITORY: "ShotaOki/iot-app-kit-extra"
jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Main
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout Target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.USE_REPOSITORY }}
          path: iot-app-kit-extra
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.USE_NODE_VERSION }}
      - name: Rewrite Version
        if: ${{ inputs.update_iot_appkit_version }}
        working-directory: iot-app-kit-extra/utility
        run: |
          node dependency-control.js replace version-override.json "@iot-app-kit/components=^${LIBRARY_VERSION}"
          node dependency-control.js replace version-override.json "@iot-app-kit/react-components=^${LIBRARY_VERSION}"
          node dependency-control.js replace version-override.json "@iot-app-kit/scene-composer=^${LIBRARY_VERSION}"
          node dependency-control.js replace version-override.json "@iot-app-kit/source-iottwinmaker=^${LIBRARY_VERSION}"
        env:
          LIBRARY_VERSION: ${{ inputs.iot_appkit_version }}
      - name: Update Project Dependency
        if: ${{ inputs.update_iot_appkit_version }}
        working-directory: iot-app-kit-extra
        run: |
          node utility/dependency-control.js apply src/scene_composer_extra/package.json utility/version-override.json
      - name: Build package
        working-directory: iot-app-kit-extra/src/scene_composer_extra
        run: |
          npm install
          npm run build:local
      - name: Dependency to current repository
        working-directory: iot-app-kit-extra/examples/typescript-vite-simple
        run: |
          sed -i 's/"@iak-extra\/scene-composer-extra.*$/"@iak-extra\/scene-composer-extra": "file:..\/..\/src\/scene_composer_extra",/g' package.json
          sed -i 's/const VITE_PROJECT_DEPLOYMENT_ROOT.*$/const VITE_PROJECT_DEPLOYMENT_ROOT = "\/iot-app-kit-extra-document";/g' vite.config.ts
          npm install
      - name: Copy From main
        working-directory: iot-app-kit-extra/examples/typescript-vite-simple
        run: |
          cp -r ../../../main/public/document-page-contents ./public/document-page-contents
          cp ../../../main/public/test-content.json ./public/test-content.json
          cp ../../../main/public/demo-content.json ./public/demo-content.json
          cp package.json ./public/package.json
          cp ../../../main/src/App.tsx ./src/App.tsx
      - name: Publish build info
        working-directory: iot-app-kit-extra/utility
        run: |
          node dependency-control.js append ${TARGET_FILE} "build-datetime=`date "+%Y-%m-%d %H:%M:%S"`"
          node dependency-control.js append ${TARGET_FILE} "source-hash=`git show --format='%H' --no-patch`"
          node dependency-control.js append ${TARGET_FILE} "project=typescript-vite-simple"
          node dependency-control.js append ${TARGET_FILE} "repository=${{ env.USE_REPOSITORY }}"
          node dependency-control.js append ${TARGET_FILE} "branch=main"
          node dependency-control.js append ${TARGET_FILE} "node-version=${NODE_VERSION}"
        env:
          TARGET_FILE: ../examples/typescript-vite-simple/public/package.json
          NODE_VERSION: ${{ env.USE_NODE_VERSION }}
      - name: Copy from URL
        working-directory: iot-app-kit-extra/examples/typescript-vite-simple/public
        run: |
          curl https://pub-5015c5eb71ab421cbc461442eab0dd68.r2.dev/resource.tar.gz -o resource.tar.gz
          tar -zxvf resource.tar.gz
          rm resource.tar.gz
      - name: Build Website
        working-directory: iot-app-kit-extra/examples/typescript-vite-simple
        run: |
          npm run build
        env:
          PUBLIC_URL: /iot-app-kit-extra-document
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "iot-app-kit-extra/examples/typescript-vite-simple/build"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
